{"version":3,"sources":["components/Home.tsx","contexts/BallparkContext.tsx","components/Ballparks.tsx","components/Franchises.tsx","models/Ballpark.ts","providers/BallparkProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","paper","padding","minHeight","backgroundColor","Home","classes","Grid","container","spacing","item","xs","Paper","elevation","className","Typography","variant","Link","color","href","BallparkContext","createContext","theme","head","palette","info","main","common","white","observer","ballparkStore","mapState","store","useContext","useBallparkStore","Fragment","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","ballparks","length","map","ballpark","index","city","state","colSpan","Ballpark","types","model","string","country","BallparkStore","optional","maybeNull","array","actions","self","load","flow","loadData","fetch","response","json","applySnapshot","afterCreate","BallparkProvider","children","useState","create","Provider","value","drawerWidth","root","display","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","badgeSection","float","grow","toolbarHeader","fontFamily","App","useTheme","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","noWrap","target","rel","Badge","Drawer","direction","Divider","List","ListItem","button","to","ListItemIcon","ListItemText","primary","Container","maxWidth","path","Franchises","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24033ebb.chunk.js","sourcesContent":["import { createStyles, Grid, Link, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '10px',\r\n      minHeight: '50vh',\r\n      backgroundColor: '#99ccff'\r\n    }\r\n  })\r\n)\r\n\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles()\r\n\r\n  // TODO: do something with these sections. Maybe make them Cards and style them?\r\n  // Some kind of drop shadow or something like that?\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Typography variant=\"h6\">ABOUT ME</Typography>\r\n          <Typography variant=\"body1\">\r\n            Some things about me.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link variant=\"h6\" color=\"inherit\" href=\"/ballparks\">BALLPARKS</Link>\r\n          <Typography variant=\"body1\">\r\n            Check out some ballparks!\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link variant=\"h6\" color=\"inherit\" href=\"/franchises\">FRANCHISES</Link>\r\n          <Typography variant=\"body1\">\r\n            Look up current and historical baseball franchises.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { createContext, useContext } from \"react\"\r\nimport { IBallparkStore } from '../stores/IBallpark'\r\n\r\nexport const BallparkContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IBallparkStore): any\r\n}\r\n\r\nexport function useBallparkStore(mapState?: IMapState): any {\r\n  const store = useContext(BallparkContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { createStyles, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useBallparkStore } from '../contexts/BallparkContext'\r\nimport { IBallpark } from '../stores/IBallpark'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.white,\r\n    }\r\n  })\r\n)\r\n\r\nconst Ballparks: React.FC = () => {\r\n  const ballparkStore = useBallparkStore()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4>B A L L P A R K S</h4>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"ballparks table\">\r\n          <TableHead>\r\n            <TableRow className={classes.head}>\r\n              <TableCell>Ballpark Name</TableCell>\r\n              <TableCell>City</TableCell>\r\n              <TableCell>State</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {ballparkStore.ballparks?.length > 0 ? ballparkStore.ballparks?.map((ballpark: IBallpark, index: number) =>\r\n            <TableRow key={`${ballpark['park.alias']}-${index}`}>\r\n              <TableCell>{ballpark['park.name']}</TableCell>\r\n              <TableCell>{ballpark.city}</TableCell>\r\n              <TableCell>{ballpark.state}</TableCell>\r\n            </TableRow>) :\r\n            <TableRow>\r\n              <TableCell colSpan={3}>\r\n                <Typography variant=\"h6\">No data to display</Typography>\r\n              </TableCell>\r\n            </TableRow>}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Ballparks)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\n\r\nconst Franchises: React.FC = () => {\r\n  return (\r\n    <h4>F R A N C H I S E S</h4>\r\n  )\r\n}\r\n\r\nexport default observer(Franchises)\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\n\r\nconst Ballpark = types.model('Ballpark', {\r\n  \"park.key\": types.string,\r\n  \"park.name\": types.string,\r\n  \"park.alias\": types.string,\r\n  city: types.string,\r\n  state: types.string,\r\n  country: types.string\r\n})\r\n\r\nexport const BallparkStore = types.model('BallparkStore', {\r\n  ballparks: types.optional(types.maybeNull(types.array(Ballpark)), null)\r\n}).actions(self => {\r\n  const load = flow(function* loadData() {\r\n    const response = yield fetch('https://mbents.github.io/baseballdatabank/api/ballparks/')\r\n    const json = yield response.json()\r\n    // console.log(json)\r\n    applySnapshot(self, {ballparks: [...json]})\r\n  })\r\n  \r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BallparkStore } from '../models/Ballpark'\r\nimport { BallparkContext } from '../contexts/BallparkContext'\r\n\r\nconst BallparkProvider = ({ children }: any) => {\r\n  const [ballparkStore] = useState(BallparkStore.create({ballparks: []}))\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"hello\")\r\n  //   // window.store = ballparkStore\r\n  // }, [ballparkStore])\r\n\r\n  const { Provider } = BallparkContext\r\n  return (\r\n    <Provider value={ballparkStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default BallparkProvider\r\n","import { AppBar, Badge, Container, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemText, makeStyles, Toolbar, Typography, useTheme } from '@material-ui/core'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport './App.css'\nimport clsx from 'clsx'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport HomeIcon from '@material-ui/icons/Home'\nimport EventSeatIcon from '@material-ui/icons/EventSeat'\nimport GroupIcon from '@material-ui/icons/Group'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport Home from './components/Home'\nimport Ballparks from './components/Ballparks'\nimport Franchises from './components/Franchises'\nimport BallparkProvider from './providers/BallparkProvider'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  badgeSection: {\n    float: 'right',\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  toolbarHeader: {\n    fontFamily: '\"Courier New\",Courier,monospace'\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <CssBaseline />\n        <AppBar\n          color=\"default\"\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h4\" className={classes.toolbarHeader} noWrap>\n              mikebents.com\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.badgeSection}>\n              <IconButton color=\"inherit\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/mbents\">\n                <Badge color=\"secondary\">\n                  <GitHubIcon />\n                </Badge>\n              </IconButton>\n              <IconButton color=\"inherit\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/MikeBents\">\n                <Badge color=\"secondary\">\n                  <TwitterIcon />\n                </Badge>\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key=\"home\" component={Link} to=\"/\">\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary={\"Home\"} />\n            </ListItem>\n            <ListItem button key=\"ballparks\" component={Link} to=\"/ballparks\">\n              <ListItemIcon><EventSeatIcon /></ListItemIcon>\n              <ListItemText primary={\"Ballparks\"} />\n            </ListItem>\n            <ListItem button key=\"franchises\" component={Link} to=\"/franchises\">\n              <ListItemIcon><GroupIcon /></ListItemIcon>\n              <ListItemText primary={\"Franchises\"} />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route path=\"/franchises\" component={Franchises} />\n              <Route path=\"/ballparks\">\n                <BallparkProvider>\n                  <Ballparks />\n                </BallparkProvider>\n              </Route>\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Container>\n        </main>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}