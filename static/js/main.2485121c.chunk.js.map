{"version":3,"sources":["components/Home.tsx","contexts/BallparkContext.tsx","components/Ballparks.tsx","components/Franchises.tsx","models/Ballpark.ts","providers/BallparkProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","paper","padding","minHeight","backgroundColor","Home","classes","Grid","container","spacing","item","xs","Paper","elevation","className","Typography","variant","Link","color","href","BallparkContext","createContext","theme","head","palette","info","main","common","white","observer","ballparkStore","mapState","store","useContext","useBallparkStore","Fragment","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","ballparks","length","map","ballpark","index","city","state","colSpan","Ballpark","types","model","string","country","BallparkStore","optional","maybeNull","array","actions","self","load","flow","loadData","fetch","response","json","applySnapshot","afterCreate","BallparkProvider","children","useState","create","Provider","value","drawerWidth","root","display","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","badgeSection","float","grow","toolbarHeader","fontFamily","App","useTheme","open","setOpen","basename","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","noWrap","target","rel","Badge","Drawer","direction","Divider","List","ListItem","button","to","ListItemIcon","ListItemText","primary","Container","maxWidth","path","Franchises","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2485121c.chunk.js","sourcesContent":["import { createStyles, Grid, Link, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '10px',\r\n      minHeight: '50vh',\r\n      backgroundColor: '#99ccff'\r\n    }\r\n  })\r\n)\r\n\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Typography variant=\"h6\">ABOUT ME</Typography>\r\n          <Typography variant=\"body1\">\r\n            Some things about me.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link variant=\"h6\" color=\"inherit\" href=\"/#/ballparks\">BALLPARKS</Link>\r\n          <Typography variant=\"body1\">\r\n            Check out some ballparks!\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link variant=\"h6\" color=\"inherit\" href=\"/#/franchises\">FRANCHISES</Link>\r\n          <Typography variant=\"body1\">\r\n            Look up current and historical baseball franchises.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { createContext, useContext } from \"react\"\r\nimport { IBallparkStore } from '../stores/IBallpark'\r\n\r\nexport const BallparkContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IBallparkStore): any\r\n}\r\n\r\nexport function useBallparkStore(mapState?: IMapState): any {\r\n  const store = useContext(BallparkContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { createStyles, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useBallparkStore } from '../contexts/BallparkContext'\r\nimport { IBallpark } from '../stores/IBallpark'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.info.main,\r\n      color: theme.palette.common.white,\r\n    }\r\n  })\r\n)\r\n\r\nconst Ballparks: React.FC = () => {\r\n  const ballparkStore = useBallparkStore()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4>B A L L P A R K S</h4>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"ballparks table\">\r\n          <TableHead>\r\n            <TableRow className={classes.head}>\r\n              <TableCell>Ballpark Name</TableCell>\r\n              <TableCell>City</TableCell>\r\n              <TableCell>State</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {ballparkStore.ballparks?.length > 0 ? ballparkStore.ballparks?.map((ballpark: IBallpark, index: number) =>\r\n            <TableRow key={`${ballpark['park.alias']}-${index}`}>\r\n              <TableCell>{ballpark['park.name']}</TableCell>\r\n              <TableCell>{ballpark.city}</TableCell>\r\n              <TableCell>{ballpark.state}</TableCell>\r\n            </TableRow>) :\r\n            <TableRow>\r\n              <TableCell colSpan={3}>\r\n                <Typography variant=\"h6\">No data to display</Typography>\r\n              </TableCell>\r\n            </TableRow>}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Ballparks)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\n\r\nconst Franchises: React.FC = () => {\r\n  return (\r\n    <h4>F R A N C H I S E S</h4>\r\n  )\r\n}\r\n\r\nexport default observer(Franchises)\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\n\r\nconst Ballpark = types.model('Ballpark', {\r\n  \"park.key\": types.string,\r\n  \"park.name\": types.string,\r\n  \"park.alias\": types.string,\r\n  city: types.string,\r\n  state: types.string,\r\n  country: types.string\r\n})\r\n\r\nexport const BallparkStore = types.model('BallparkStore', {\r\n  ballparks: types.optional(types.maybeNull(types.array(Ballpark)), null)\r\n}).actions(self => {\r\n  const load = flow(function* loadData() {\r\n    const response = yield fetch('https://www.mikebents.com/baseballdatabank/api/ballparks/')\r\n    const json = yield response.json()\r\n    applySnapshot(self, {ballparks: [...json]})\r\n  })\r\n  \r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BallparkStore } from '../models/Ballpark'\r\nimport { BallparkContext } from '../contexts/BallparkContext'\r\n\r\nconst BallparkProvider = ({ children }: any) => {\r\n  const [ballparkStore] = useState(BallparkStore.create({ballparks: []}))\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"hello\")\r\n  //   // window.store = ballparkStore\r\n  // }, [ballparkStore])\r\n\r\n  const { Provider } = BallparkContext\r\n  return (\r\n    <Provider value={ballparkStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default BallparkProvider\r\n","import { AppBar, Badge, Container, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemText, makeStyles, Toolbar, Typography, useTheme } from '@material-ui/core'\r\nimport { BrowserRouter as Router, Switch, Route, Link, HashRouter } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\nimport './App.css'\r\nimport clsx from 'clsx'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport EventSeatIcon from '@material-ui/icons/EventSeat'\r\nimport GroupIcon from '@material-ui/icons/Group'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nimport Home from './components/Home'\r\nimport Ballparks from './components/Ballparks'\r\nimport Franchises from './components/Franchises'\r\nimport BallparkProvider from './providers/BallparkProvider'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  badgeSection: {\r\n    float: 'right',\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbarHeader: {\r\n    fontFamily: '\"Courier New\",Courier,monospace'\r\n  }\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <Router> */}\r\n      <HashRouter basename=\"/\">\r\n        <CssBaseline />\r\n        <AppBar\r\n          color=\"default\"\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h4\" className={classes.toolbarHeader} noWrap>\r\n              mikebents.com\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <div className={classes.badgeSection}>\r\n              <IconButton color=\"inherit\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/mbents\">\r\n                <Badge color=\"secondary\">\r\n                  <GitHubIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton color=\"inherit\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/MikeBents\">\r\n                <Badge color=\"secondary\">\r\n                  <TwitterIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button key=\"home\" component={Link} to=\"/\">\r\n              <ListItemIcon><HomeIcon /></ListItemIcon>\r\n              <ListItemText primary={\"Home\"} />\r\n            </ListItem>\r\n            <ListItem button key=\"ballparks\" component={Link} to=\"/ballparks\">\r\n              <ListItemIcon><EventSeatIcon /></ListItemIcon>\r\n              <ListItemText primary={\"Ballparks\"} />\r\n            </ListItem>\r\n            <ListItem button key=\"franchises\" component={Link} to=\"/franchises\">\r\n              <ListItemIcon><GroupIcon /></ListItemIcon>\r\n              <ListItemText primary={\"Franchises\"} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Container maxWidth=\"lg\">\r\n            <Switch>\r\n              <Route path=\"/franchises\" component={Franchises} />\r\n              <Route path=\"/ballparks\">\r\n                <BallparkProvider>\r\n                  <Ballparks />\r\n                </BallparkProvider>\r\n              </Route>\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n          </Container>\r\n        </main>\r\n      </HashRouter>\r\n      {/* </Router> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}