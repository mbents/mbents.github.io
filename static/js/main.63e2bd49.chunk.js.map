{"version":3,"sources":["components/TopAppBar.tsx","components/NavMenuList.tsx","components/Home.tsx","contexts/BallparkContext.tsx","components/GenericBreadcrumbs.tsx","components/Ballparks.tsx","contexts/FranchiseContext.tsx","components/FranchiseBreadcrumbs.tsx","components/Franchises.tsx","components/FranchiseCard.tsx","components/Franchise.tsx","components/About.tsx","contexts/ScheduleContext.tsx","components/Schedule.tsx","models/Schedule.ts","providers/ScheduleProvider.tsx","components/Schedules.tsx","contexts/BoxscoreContext.tsx","components/Score.tsx","components/Wind.tsx","components/WeatherConditions.tsx","utils/getPersonString.ts","components/Umpires.tsx","utils/getPositionString.ts","components/Lineup.tsx","contexts/PersonContext.tsx","components/Boxscores.tsx","models/Ballpark.ts","providers/BallparkProvider.tsx","models/Franchise.ts","providers/FranchiseProvider.tsx","models/Boxscore.ts","providers/BoxscoreProvider.tsx","models/Person.ts","providers/PersonProvider.tsx","components/RouteContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","badgeSection","float","breakpoints","up","grow","flexGrow","toolbarHeader","fontFamily","observer","props","open","setOpen","classes","AppBar","color","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","title","href","Badge","useState","showBaseball","setShowBaseball","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Divider","Collapse","in","timeout","unmountOnExit","createStyles","paper","padding","minHeight","backgroundColor","Home","disclaimerOpen","setDisclaimerOpen","handleClose","Fragment","Grid","container","spacing","item","xs","Paper","elevation","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","size","fontSize","BallparkContext","createContext","useBallparkStore","mapState","store","useContext","breadcrumbMargin","marginBottom","GenericBreadcrumbs","breadcrumb","Breadcrumbs","separator","ballparks","length","columns","name","label","options","filter","sort","data","rowsPerPage","rowsPerPageOptions","print","selectableRows","FranchiseContext","useFranchiseStore","FranchiseBreadcrumbs","franchiseId","year","franchises","customBodyRender","value","pagination","franchise","expanded","setExpanded","yearsArray","setYearsArray","startYear","parseInt","First_Date_Nickname_Used","slice","Date","getFullYear","toString","endYear","Last_Date_Nickname_Used","useEffect","years","Array","from","v","k","Card","CardHeader","avatar","Avatar","Location_Name","substring","Nickname","subheader","CardContent","justify","City","State","orientation","League","Division","CardActions","Button","startIcon","map","Franchise_ID","useParams","gutterBottom","index","sectionHeader","fontWeight","sectionBreak","margin","code","borderRadius","dateStamp","flex","About","align","ScheduleContext","scheduleStore","useScheduleStore","scheduledGames","date","showBreadcrumbs","parseDate","parsedDateStr","toDateString","parseTimeOfDay","timeOfDay","toUpperCase","game","home_team","game_number","visiting_team","time_of_day","ScheduledGame","types","model","string","day_of_week","visiting_team_league","visiting_team_game_number","home_team_league","home_team_game_number","postponement_explanation","makeup_date","ScheduleStore","optional","maybeNull","array","actions","self","load","flow","fetch","response","json","franchiseGames","applySnapshot","tempYear","tempDate","replaceAll","gamesByDate","afterCreate","ScheduleProvider","children","selectedFranchise","selectedYear","selectedDate","Provider","selectedFranchiseId","setSelectedFranchiseId","setSelectedYear","setSelectedDate","showDateSearch","setShowDateSearch","showFranchiseSearch","setShowFranchiseSearch","handleClick","source","getYear","FormControl","InputLabel","htmlFor","Select","id","autoWidth","native","onChange","event","target","Current_Franchise_ID","a","b","style","TextField","type","BoxscoreContext","table","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","boxscore","visitor_final_score","visitor_hits","visitor_errors","home_final_score","home_hits","home_errors","windDirection","windSpeed","getWindDirection","getSky","sky","temperature","wind_direction","wind_speed","getPrecipitation","precipitation","getFieldCondition","field_condition","getPersonString","playerId","people","player","find","ID","First","Last","home_plate_umpire","first_base_umpire","second_base_umpire","third_base_umpire","left_field_umpire","right_field_umpire","getPositionString","home_batter_1","home_position_1","visitor_batter_1","visitor_position_1","home_batter_2","home_position_2","visitor_batter_2","visitor_position_2","home_batter_3","home_position_3","visitor_batter_3","visitor_position_3","home_batter_4","home_position_4","visitor_batter_4","visitor_position_4","home_batter_5","home_position_5","visitor_batter_5","visitor_position_5","home_batter_6","home_position_6","visitor_batter_6","visitor_position_6","home_batter_7","home_position_7","visitor_batter_7","visitor_position_7","home_batter_8","home_position_8","visitor_batter_8","visitor_position_8","home_batter_9","home_position_9","visitor_batter_9","visitor_position_9","PersonContext","boxscoreStore","useBoxscoreStore","ballparkStore","personStore","usePersonStore","currentBallpark","setCurrentBallpark","ballpark","PARKID","game_site","inputString","month","day","toLocaleDateString","weekday","getDateString","NAME","CITY","STATE","attendance","minutes","minutesNumber","remainder","Math","floor","getTimeOfGame","time_of_game","Ballpark","AKA","START","END","LEAGUE","NOTES","BallparkStore","loadData","BallparkProvider","Franchise","Alternate_Nicknames","FranchiseStore","FranchiseProvider","franchiseStore","Boxscore","game_id","start_time","DH_used_flag","day_night_flag","vis_starting_pitcher","home_starting_pitcher","PS_scorer","translator","inputter","input_time","edit_time","how_scored","pitches_entered","number_of_innings","visitor_left_on_base","home_left_on_base","winning_pitcher","losing_pitcher","save_for","GW_RBI","BoxscoreStore","gameId","team","BoxscoreProvider","Person","Playdebut","Mgrdebut","Coachdebut","Umpdebut","PersonStore","PersonProvider","Container","maxWidth","path","exact","root","drawerOpen","drawerClose","overflowX","toolbar","alignItems","justifyContent","mixins","content","App","useTheme","basename","CssBaseline","Drawer","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63e2bd49.chunk.js","sourcesContent":["import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nimport { AppBar, Badge, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\n\r\ninterface ITopAppBar {\r\n  open: boolean,\r\n  setOpen: (open: boolean) => void\r\n}\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  badgeSection: {\r\n    float: 'right',\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbarHeader: {\r\n    fontFamily: '\"Courier New\",Courier,monospace'\r\n  }\r\n}))\r\n\r\nconst TopAppBar: React.FC<ITopAppBar> = (props) => {\r\n  const { open, setOpen } = props\r\n  const classes = useStyles()\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"default\"\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: open,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, {\r\n            [classes.hide]: open,\r\n          })}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h4\" className={classes.toolbarHeader} noWrap>\r\n          mikebents.com\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div className={classes.badgeSection}>\r\n          <IconButton title=\"GitHub repos\" color=\"inherit\" href=\"https://github.com/mbents\">\r\n            <Badge color=\"secondary\">\r\n              <GitHubIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton title=\"Twitter\" color=\"inherit\" href=\"https://twitter.com/MikeBents\">\r\n            <Badge color=\"secondary\">\r\n              <TwitterIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default observer(TopAppBar)\r\n","import { Collapse, Divider, List, ListItem, ListItemText } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useState } from 'react'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport EventSeatIcon from '@material-ui/icons/EventSeat'\r\nimport GroupIcon from '@material-ui/icons/Group'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday'\r\nimport SportsBaseballIcon from '@material-ui/icons/SportsBaseball'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\n\r\nconst NavMenuList: React.FC = () => {\r\n  const [showBaseball, setShowBaseball] = useState(false)\r\n\r\n  const handleClick = () => {\r\n    setShowBaseball(!showBaseball)\r\n  }\r\n\r\n  return (\r\n    <List>\r\n      <ListItem button key=\"home\" component={Link} to=\"/\">\r\n        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Home\" />\r\n      </ListItem>\r\n      <ListItem button key=\"about\" component={Link} to=\"/about\">\r\n        <ListItemIcon><PersonIcon /></ListItemIcon>\r\n        <ListItemText primary=\"About\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem button key=\"baseball\" onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <SportsBaseballIcon />\r\n          {showBaseball ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Baseball stuff\" />\r\n      </ListItem>\r\n      <Collapse in={showBaseball} timeout=\"auto\" unmountOnExit>\r\n        <ListItem button key=\"ballparks\" component={Link} to=\"/ballparks\">\r\n          <ListItemIcon><EventSeatIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Ballparks\" />\r\n        </ListItem>\r\n        <ListItem button key=\"franchises\" component={Link} to=\"/franchises\">\r\n          <ListItemIcon><GroupIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Franchises\" />\r\n        </ListItem>\r\n        <ListItem button key=\"schedules\" component={Link} to=\"/schedules\">\r\n          <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Schedules\" />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Divider />\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default observer(NavMenuList)\r\n","import { createStyles, Grid, IconButton, Link, makeStyles, Paper, Snackbar, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    paper: {\r\n      padding: '10px',\r\n      minHeight: '50vh',\r\n      backgroundColor: '#99ccff'\r\n    }\r\n  })\r\n)\r\n\r\nconst Home: React.FC = () => {\r\n  const classes = useStyles()\r\n  const [disclaimerOpen, setDisclaimerOpen] = useState(true)\r\n\r\n  const handleClose = () => {\r\n    setDisclaimerOpen(false)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Link variant=\"h6\" color=\"inherit\" href=\"/#/about\">ABOUT</Link>\r\n            <Typography variant=\"body1\">\r\n              What is going on with this website?\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Link variant=\"h6\" color=\"inherit\" href=\"/#/ballparks\">BALLPARKS</Link>\r\n            <Typography variant=\"body1\">\r\n              Check out some ballparks!\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Link variant=\"h6\" color=\"inherit\" href=\"/#/franchises\">FRANCHISES</Link>\r\n            <Typography variant=\"body1\">\r\n              Look up current and historical baseball franchises.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Link variant=\"h6\" color=\"inherit\" href=\"/#/schedules\">SCHEDULES</Link>\r\n            <Typography variant=\"body1\">\r\n              Look up schedules by franchise or date.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n     <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      open={disclaimerOpen}\r\n      autoHideDuration={10000}\r\n      onClose={handleClose}\r\n      message='The information used here was obtained free of\r\n        charge from and is copyrighted by Retrosheet.  Interested\r\n        parties may contact Retrosheet at \r\n        \"www.retrosheet.org\"'\r\n      action={\r\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      }\r\n     />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { createContext, useContext } from \"react\"\r\nimport { IBallparkStore } from '../stores/IBallpark'\r\n\r\nexport const BallparkContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IBallparkStore): any\r\n}\r\n\r\nexport function useBallparkStore(mapState?: IMapState): any {\r\n  const store = useContext(BallparkContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { Breadcrumbs, makeStyles, Typography } from '@material-ui/core'\r\nimport Link from '@material-ui/core/Link'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  breadcrumbMargin: {\r\n    marginBottom: '10px'\r\n  }\r\n}))\r\n\r\ninterface IGenericBreadcrumbs {\r\n  breadcrumb: string\r\n}\r\n\r\nexport default function GenericBreadcrumbs(props: IGenericBreadcrumbs) {\r\n  const { breadcrumb } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <Breadcrumbs className={classes.breadcrumbMargin} separator={<NavigateNextIcon fontSize=\"small\" />}>\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Home\r\n      </Link>\r\n      <Typography color=\"textPrimary\">{breadcrumb}</Typography>\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useBallparkStore } from '../contexts/BallparkContext'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport GenericBreadcrumbs from './GenericBreadcrumbs'\r\n\r\nconst Ballparks: React.FC = () => {\r\n  const ballparkStore = useBallparkStore()\r\n  const { ballparks } = ballparkStore\r\n\r\n  const options = {\r\n    rowsPerPage: 25,\r\n    rowsPerPageOptions: [25,50,100,200,300],\r\n    print: false,\r\n    selectableRows: \"none\" as const\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"PARKID\",\r\n      label: \"Park ID\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"NAME\",\r\n      label: \"Name\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"AKA\",\r\n      label: \"Other Names\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"CITY\",\r\n      label: \"City\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"STATE\",\r\n      label: \"State\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"START\",\r\n      label: \"Start\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"END\",\r\n      label: \"End\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"LEAGUE\",\r\n      label: \"League\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"NOTES\",\r\n      label: \"Notes\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GenericBreadcrumbs breadcrumb=\"Ballparks\" />\r\n      {ballparks?.length > 0 &&\r\n      <MUIDataTable\r\n        title={\"Ballparks\"}\r\n        columns={columns}\r\n        data={ballparks}\r\n        options={options}\r\n      />}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Ballparks)\r\n","import { createContext, useContext } from \"react\"\r\nimport { IFranchiseStore } from '../stores/IFranchise'\r\n\r\nexport const FranchiseContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IFranchiseStore): any\r\n}\r\n\r\nexport function useFranchiseStore(mapState?: IMapState): any {\r\n  const store = useContext(FranchiseContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { Breadcrumbs, makeStyles, Typography } from '@material-ui/core'\r\nimport Link from '@material-ui/core/Link'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  breadcrumbMargin: {\r\n    marginBottom: '10px'\r\n  }\r\n}))\r\n\r\ninterface IFranchiseBreadcrumbs {\r\n  franchiseId?: string,\r\n  year?: string\r\n}\r\n\r\nexport default function FranchiseBreadcrumbs(props: IFranchiseBreadcrumbs) {\r\n  const { franchiseId, year } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <Breadcrumbs className={classes.breadcrumbMargin} separator={<NavigateNextIcon fontSize=\"small\" />}>\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Home\r\n      </Link>\r\n      {franchiseId ?\r\n      <Link color=\"inherit\" href=\"/#/franchises\">\r\n        Franchises\r\n      </Link> :\r\n      <Typography color=\"textPrimary\">Franchises</Typography>}\r\n      {franchiseId && year ?\r\n      <Link color=\"inherit\" href={`/#/franchises/${franchiseId}`}>\r\n        {franchiseId}\r\n      </Link> :\r\n      <Typography color=\"textPrimary\">{franchiseId}</Typography>}\r\n      {year &&\r\n      <Typography color=\"textPrimary\">{year}</Typography>}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n","import { Link } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport React from 'react'\r\nimport { useFranchiseStore } from '../contexts/FranchiseContext'\r\nimport FranchiseBreadcrumbs from './FranchiseBreadcrumbs'\r\n\r\nconst Franchises: React.FC = () => {\r\n  const franchiseStore = useFranchiseStore()\r\n  const { franchises } = franchiseStore\r\n\r\n  const options = {\r\n    pagination: false,\r\n    print: false,\r\n    selectableRows: \"none\" as const\r\n  }\r\n\r\n  const columns=[\r\n    {\r\n      name: \"Current_Franchise_ID\",\r\n      label: 'Current Franchise ID',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Franchise_ID\",\r\n      label: 'Franchise ID',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: any) => (\r\n          <Link href={`/#/franchises/${value}`}>\r\n            {value}\r\n          </Link>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: \"League\",\r\n      label: \"League\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Division\",\r\n      label: 'Division',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Location_Name\",\r\n      label: 'Location Name',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Nickname\",\r\n      label: 'Nickname',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Alternate_Nicknames\",\r\n      label: \"Alternate Nicknames\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"First_Date_Nickname_Used\",\r\n      label: 'Used From',\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"Last_Date_Nickname_Used\",\r\n      label: 'Used Until',\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"City\",\r\n      label: 'City',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"State\",\r\n      label: \"State\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n  ]\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FranchiseBreadcrumbs />\r\n      {franchises?.length > 0 &&\r\n      <MUIDataTable\r\n        title={\"Franchises\"}\r\n        columns={columns}\r\n        data={franchises}\r\n        options={options}\r\n      />}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Franchises)\r\n","import { Avatar, Button, Card, CardActions, CardContent, CardHeader, Collapse, Divider, Grid, Link, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { IFranchise } from '../stores/IFranchise'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\n\r\ninterface IFranchiseCard {\r\n  franchise: IFranchise\r\n}\r\n\r\nconst FranchiseCard: React.FC<IFranchiseCard> = (props) => {\r\n  const { franchise } = props\r\n  const [expanded, setExpanded] = useState<boolean>(false)\r\n  const [yearsArray, setYearsArray] = useState<Array<number>>([])\r\n  const startYear = parseInt(franchise.First_Date_Nickname_Used?.slice(-4) || new Date().getFullYear().toString())\r\n  const endYear = parseInt(franchise.Last_Date_Nickname_Used?.slice(-4) || new Date().getFullYear().toString())\r\n  \r\n  useEffect(() => {\r\n    const years = Array.from({length: (endYear - startYear + 1)},(v,k)=>k + startYear)\r\n    setYearsArray(years)\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Card variant=\"outlined\">\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar>\r\n              {franchise.Location_Name?.substring(0, 1)}\r\n            </Avatar>\r\n          }\r\n          title={`${franchise.Location_Name} ${franchise.Nickname}`}\r\n          subheader={`${franchise.First_Date_Nickname_Used} - ${franchise.Last_Date_Nickname_Used}`}\r\n        />\r\n        <CardContent>\r\n          <Grid container justify=\"space-evenly\">\r\n            <Grid item>\r\n              <Typography>{`${franchise.City}, ${franchise.State}`}</Typography>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Divider orientation=\"vertical\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography>{`${franchise.League} ${franchise.Division}`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleClick}\r\n            startIcon={expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          >\r\n            {expanded ? 'Hide Schedules' : 'Show Schedules'}\r\n          </Button>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n            {yearsArray.length > 0 ? yearsArray.map((year: number) =>\r\n              <Grid item xs={2}>\r\n                <Link href={`/#/franchises/${franchise.Franchise_ID}/schedule/${year}`}>{year}</Link>\r\n              </Grid>\r\n            ) : null}\r\n            </Grid>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default observer(FranchiseCard)\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFranchiseStore } from '../contexts/FranchiseContext'\r\nimport { IFranchise } from '../stores/IFranchise'\r\nimport FranchiseCard from './FranchiseCard'\r\nimport FranchiseBreadcrumbs from './FranchiseBreadcrumbs'\r\n\r\nconst Franchise: React.FC = () => {\r\n  const { franchiseId } = useParams<{ franchiseId: string }>()\r\n  const franchiseStore = useFranchiseStore()\r\n  const { franchises } = franchiseStore\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FranchiseBreadcrumbs franchiseId={franchiseId} />\r\n      <Typography variant=\"h6\" gutterBottom>Franchise cards for {franchiseId}</Typography>\r\n      <Grid container spacing={2}>\r\n        {franchises?.map((franchise: IFranchise, index: number) =>\r\n          franchise.Franchise_ID === franchiseId ?\r\n            <FranchiseCard franchise={franchise} key={index} /> : null\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Franchise)\r\n","import { createStyles, Link, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport GenericBreadcrumbs from './GenericBreadcrumbs'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    sectionHeader: {\r\n      fontFamily: '\"Courier New\",Courier,monospace',\r\n      fontWeight: 'bold'\r\n    },\r\n    sectionBreak: {\r\n      marginBottom: '20px'\r\n    },\r\n    paper: {\r\n      padding: '20px',\r\n      margin: '20px 20px',\r\n      backgroundColor: '#e8e8e8'\r\n    },\r\n    container: {\r\n      width: '65%'\r\n    },\r\n    code: {\r\n      backgroundColor: '#e8e8e8',\r\n      borderRadius: '5px',\r\n      padding: '5px'\r\n    },\r\n    dateStamp: {\r\n      flex: 1\r\n    }\r\n  })\r\n)\r\n\r\nconst About: React.FC = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <GenericBreadcrumbs breadcrumb=\"About\" />\r\n      <Typography align=\"right\" className={classes.dateStamp}>February 24, 2021</Typography>\r\n      <Typography variant=\"h5\" className={classes.sectionHeader}>What's all this then</Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        For quite a while I've been wanting to build a web application that makes use of baseball data.\r\n        I had what seemed like a pretty simple goal for it: I wanted it to be something that I would use \r\n        to look up baseball data or statistics or the boxscore from a certain game. But I could never quite \r\n        get a fully functional application running. I would start out pretty well by scraping or \r\n        downloading/parsing/cleaning data from somewhere and then run out of steam when it came time to \r\n        figure out how to host the data, let alone come up with a way to show and interact with it. Now \r\n        don't get me wrong, I don't think that what I describe below is the fully-functional baseball \r\n        application of my dreams. But what I've put together is a good step in that direction. \r\n        I think it's a solid foundation and it's something that I hope to continue to work on.\r\n      </Typography>\r\n      <Typography variant=\"h5\" className={classes.sectionHeader}>Let's get started</Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        The entire system&mdash;if you will&mdash;is currently made up of two different GitHub repositories:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://github.com/mbents/mbents.github.io'>\r\n            https://github.com/mbents/mbents.github.io\r\n          </Link>\r\n          <br />\r\n          <Link href='https://github.com/mbents/rs-data'>\r\n            https://github.com/mbents/rs-data\r\n          </Link>\r\n        </Paper>\r\n        The web application was created using Create React App \r\n        (<Link href='https://github.com/facebook/create-react-app'>\r\n          https://github.com/facebook/create-react-app\r\n        </Link>) and is hosted on GitHub using GitHub Pages. I found a lot of different tutorials for doing this. \r\n        Here are the ones that I found most useful:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://create-react-app.dev/docs/deployment/#github-pages'>\r\n            https://create-react-app.dev/docs/deployment/#github-pages\r\n          </Link>\r\n          <br/>\r\n          <Link href='https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f'>\r\n            https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\r\n          </Link>\r\n        </Paper>\r\n        <span className={classes.code}>gh-pages</span> is a package that helps publish your website. \r\n        There's a handy deploy step that packages up your site's files and pushes them to a branch on GitHub. \r\n        My web application also uses <span className={classes.code}>mobx-state-tree</span> for state management \r\n        and <span className={classes.code}>Material-UI</span> to build the UI.\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        The backend data is also hosted via GitHub Pages. Basically it's a static API that only serves data \r\n        to <span className={classes.code}>GET</span> requests, but that's really all I needed and it's easy to do. \r\n        I originally got the idea from this post:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://dev.to/matmooredev/can-you-host-a-read-only-api-on-github-pages-1jib'>\r\n            https://dev.to/matmooredev/can-you-host-a-read-only-api-on-github-pages-1jib\r\n          </Link>\r\n        </Paper>\r\n        The repository itself is a collection of historical baseball data that I downloaded from a website \r\n        called Retrosheet (<Link href='https://www.retrosheet.org/'>https://www.retrosheet.org/</Link>). \r\n        I parsed the event files using a couple utilities that I had created several years ago:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://github.com/mbents/retrosheet-download-dotnet'>\r\n            https://github.com/mbents/retrosheet-download-dotnet\r\n          </Link><br />\r\n          <Link href='https://github.com/mbents/csv-to-json'>\r\n            https://github.com/mbents/csv-to-json\r\n          </Link>\r\n        </Paper>\r\n        They both still worked, which was pretty cool! The first project was written in C# and uses an executable \r\n        found on the Retrosheet website called <span className={classes.code}>BGAME</span> to parse the files \r\n        into CSV files. The second utility is a Node.js application that converts the CSV files to JSON. After everything\r\n        was parsed and I pushed the changes, I had a basic API up and running.\r\n      </Typography>\r\n      <Typography variant=\"h5\" className={classes.sectionHeader}>Gotcha!</Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        A nice thing, in my opinion, about doing it this way is I can access the data just using the URL to the directory. \r\n        For example, this will return JSON data:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://mbents.github.io/rs-data/ballparks/'>\r\n            https://mbents.github.io/rs-data/ballparks/\r\n          </Link>\r\n        </Paper>\r\n        I don't need to specify <span className={classes.code}>index.json</span> in the \r\n        URL&mdash;which is the file located in the <span className={classes.code}>/ballparks</span> directory&mdash;but \r\n        it's important that it's there. \r\n        Because I'm fetching the directory and the directory contains a file named <span className={classes.code}>index.json</span>, the data returned will be the \r\n        contents of that file. This is a nice (possibly undocumented?) feature of GitHub, apparently.\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        There are a couple things to take note of from this guide:\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Link href='https://create-react-app.dev/docs/deployment/#github-pages'>\r\n            https://create-react-app.dev/docs/deployment/#github-pages\r\n          </Link>\r\n        </Paper>\r\n        If you want to point a domain to your GitHub Pages project, you'll have to add a <span className={classes.code}>CNAME</span> file \r\n        to your repository, as noted in Step 5.<br />\r\n        Also, if your React application uses client-side routing, you might need to make some changes. My app \r\n        uses <span className={classes.code}>React Router</span> and I switched from the \r\n        common <span className={classes.code}>Router</span> to use <span className={classes.code}>HashRouter</span>.<br />\r\n        One more thing: I strongly recommend NOT tweaking the <span className={classes.code}>package.json</span> scripts \r\n        to push deployments to your main branch. In hindsight, it seems pretty obvious. However, at the time, I \r\n        didn't consider that all my React code was going to be overwritten by \r\n        the <span className={classes.code}>gh-pages</span> deployment process. \r\n      </Typography>\r\n      <Typography variant=\"h5\" className={classes.sectionHeader}>Conclusion</Typography>\r\n      <Typography variant=\"body1\" className={classes.sectionBreak}>\r\n        I certainly didn't intend for this to be a step-by-step guide for creating a React application \r\n        using a GitHub Pages repository as an API, but here we are. I mainly put this together because \r\n        I know that, given the way I start and stop my personal projects, at some point I will need \r\n        to reference this material again. If you're here and you aren't me, then I hope that this was \r\n        useful to you!\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { createContext, useContext } from \"react\"\r\nimport { IScheduleStore } from '../stores/ISchedule'\r\n\r\nexport const ScheduleContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IScheduleStore): any\r\n}\r\n\r\nexport function useScheduleStore(mapState?: IMapState): any {\r\n  const store = useContext(ScheduleContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { Card, CardHeader, Grid, Link, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useScheduleStore } from '../contexts/ScheduleContext'\r\nimport { IScheduledGame } from '../stores/ISchedule'\r\nimport FranchiseBreadcrumbs from './FranchiseBreadcrumbs'\r\n\r\ninterface ISchedule {\r\n  showBreadcrumbs?: boolean\r\n}\r\n\r\nconst Schedule: React.FC<ISchedule> = (props) => {\r\n  const scheduleStore = useScheduleStore()\r\n  const { scheduledGames, franchiseId, year, date } = scheduleStore\r\n  const { showBreadcrumbs } = props\r\n\r\n  const parseDate = (date: string | undefined) => {\r\n    if (date) {\r\n      const parsedDateStr = `${date.slice(4, 6)}-${date.slice(-2)}-${date.slice(0, 4)}`\r\n      return new Date(parsedDateStr).toDateString()\r\n    } else {\r\n      return 'Unknown date'\r\n    }\r\n  }\r\n\r\n  const parseTimeOfDay = (timeOfDay: string | undefined) => {\r\n    switch (timeOfDay?.toUpperCase()) {\r\n      case 'D':\r\n        return 'Day'\r\n      case 'N':\r\n        return 'Night'\r\n      case 'A':\r\n        return 'Afternoon'\r\n      case 'E':\r\n        return 'Evening'\r\n      default:\r\n        return 'Unknown'\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {showBreadcrumbs &&\r\n      <FranchiseBreadcrumbs franchiseId={franchiseId} year={year} />}\r\n      {franchiseId && year ?\r\n      <Typography variant=\"h6\">{`Schedule for ${franchiseId} from ${year}`}</Typography> :\r\n      <Typography variant=\"h6\">{`Schedule for ${date}`}</Typography>\r\n      }\r\n      <Grid container spacing={1}>\r\n      {scheduledGames?.length > 0 ? scheduledGames.map((game: IScheduledGame, index: number) =>\r\n        <Grid item xs={4} key={`${game.date}-${game.game_number}-${index}`}>\r\n          <Card key={`${index}-${game.date}`} variant=\"outlined\">\r\n            <CardHeader\r\n              title={\r\n                <Link variant=\"h6\" color=\"inherit\" href={`/#/boxscores/${game.home_team}${game.date}${game.game_number}`}>\r\n                {`${game.visiting_team} @ ${game.home_team}`}\r\n                </Link>\r\n              }\r\n              subheader={`${parseDate(game.date)} | Time of day: ${parseTimeOfDay(game.time_of_day)}`}\r\n            />\r\n          </Card>\r\n        </Grid>\r\n      ) : <Typography variant=\"h6\">No games to display.</Typography>}\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Schedule)\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\nimport { IScheduledGame } from \"../stores/ISchedule\"\r\n\r\nconst ScheduledGame = types.model('Schedule', {\r\n  date: types.string,\r\n  game_number: types.string,\r\n  day_of_week: types.string,\r\n  visiting_team: types.string,\r\n  visiting_team_league: types.string,\r\n  visiting_team_game_number: types.string,\r\n  home_team: types.string,\r\n  home_team_league: types.string,\r\n  home_team_game_number: types.string,\r\n  time_of_day: types.string,\r\n  postponement_explanation: types.string,\r\n  makeup_date: types.string\r\n})\r\n\r\nexport const ScheduleStore = types.model('ScheduleStore', {\r\n  year: types.optional(types.maybeNull(types.string), null),\r\n  franchiseId: types.optional(types.maybeNull(types.string), null),\r\n  date: types.optional(types.maybeNull(types.string), null),\r\n  scheduledGames: types.optional(types.maybeNull(types.array(ScheduledGame)), null)\r\n}).actions(self => {\r\n  const load = flow(function* () {\r\n    if (self.year && self.franchiseId) {\r\n      const response = yield fetch(`https://www.mikebents.com/rs-data/schedules/${self.year}SKED.json`)\r\n      const json = yield response.json()\r\n      if (self.franchiseId) {\r\n        const franchiseGames = json.filter((item: IScheduledGame) => item.visiting_team === self.franchiseId || item.home_team === self.franchiseId)\r\n        applySnapshot(self, {year: self.year, franchiseId: self.franchiseId, date: self.date, scheduledGames: [...franchiseGames]})\r\n      } else {\r\n        applySnapshot(self, {year: self.year, franchiseId: self.franchiseId, date: self.date, scheduledGames: [...json]})\r\n      }\r\n    } else if (self.date) {\r\n      const tempYear = self.date.slice(0, 4)\r\n      const tempDate = self.date.replaceAll('-', '')\r\n      const response = yield fetch(`https://www.mikebents.com/rs-data/schedules/${tempYear}SKED.json`)\r\n      const json = yield response.json()\r\n      const gamesByDate = json.filter((item: IScheduledGame) => item.date === tempDate)\r\n      applySnapshot(self, {year: tempYear, franchiseId: self.franchiseId, date: self.date, scheduledGames: [...gamesByDate]})\r\n    }\r\n  })\r\n\r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ScheduleContext } from '../contexts/ScheduleContext'\r\nimport { ScheduleStore } from '../models/Schedule'\r\n\r\nconst ScheduleProvider = ({ children, selectedFranchise, selectedYear, selectedDate }: any) => {\r\n  const { franchiseId, year } = useParams<{ franchiseId: string, year: string }>()\r\n  const scheduleStore = ScheduleStore.create({\r\n    year: year || selectedYear || '',\r\n    franchiseId: franchiseId || selectedFranchise || '',\r\n    date: selectedDate || '',\r\n    scheduledGames: []\r\n  })\r\n\r\n  const { Provider } = ScheduleContext\r\n  return (\r\n    <Provider value={scheduleStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default ScheduleProvider\r\n","import { Button, Divider, FormControl, Grid, InputLabel, makeStyles, Select, TextField, Typography } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useFranchiseStore } from '../contexts/FranchiseContext'\r\nimport ScheduleProvider from '../providers/ScheduleProvider'\r\nimport { IFranchise } from '../stores/IFranchise'\r\nimport Schedule from './Schedule'\r\nimport GenericBreadcrumbs from './GenericBreadcrumbs'\r\n\r\nconst Schedules: React.FC = () => {\r\n  const franchiseStore = useFranchiseStore()\r\n  const { franchises } = franchiseStore\r\n  const [selectedFranchiseId, setSelectedFranchiseId] = useState('')\r\n  const [selectedYear, setSelectedYear] = useState('')\r\n  const [selectedDate, setSelectedDate] = useState('')\r\n  const [showDateSearch, setShowDateSearch] = useState<boolean>(false)\r\n  const [showFranchiseSearch, setShowFranchiseSearch] = useState<boolean>(false)\r\n  const [yearsArray, setYearsArray] = useState<Array<number>>([])\r\n\r\n  const handleFranchiseChange = (event: ChangeEvent<any>) => {\r\n    setSelectedFranchiseId(event.target.value)\r\n  }\r\n\r\n  const handleYearChange = (event: ChangeEvent<any>) => {\r\n    setSelectedYear(event.target.value)\r\n  }\r\n\r\n  const handleDateChange = (event: ChangeEvent<any>) => {\r\n    setSelectedDate(event.target.value)\r\n  }\r\n\r\n  const handleClick = (source: 'franchise' | 'date') => {\r\n    if (source === 'date') {\r\n      setSelectedFranchiseId('')\r\n      setSelectedYear('')\r\n      setShowDateSearch(true)\r\n      setShowFranchiseSearch(false)\r\n    } else if (source === 'franchise') {\r\n      setSelectedDate('')\r\n      setShowFranchiseSearch(true)\r\n      setShowDateSearch(false)\r\n    }\r\n  }\r\n\r\n  const getYear = (date: string | undefined) => {\r\n    return date ? date.slice(-4) : 'present'\r\n  }\r\n\r\n  useEffect(() => {\r\n    const years = Array.from({length: (2020 - 1877 + 1)},(v,k)=>k + 1877)\r\n    setYearsArray(years)\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GenericBreadcrumbs breadcrumb=\"Schedules\" />\r\n      <Typography variant=\"h6\">Schedule search</Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"franchises\">Team</InputLabel>\r\n            <Select\r\n              id=\"franchises\"\r\n              label=\"Team\"\r\n              autoWidth\r\n              native\r\n              onChange={handleFranchiseChange}\r\n              value={selectedFranchiseId}\r\n            >\r\n              <option value=\"\" />\r\n              {franchises.map((item: IFranchise, index: number) =>\r\n                <option key={`${item.Current_Franchise_ID}-${index}`} value={item.Current_Franchise_ID}>\r\n                  {`[${item.Current_Franchise_ID}] ${item.Location_Name} ${item.Nickname} \r\n                  (${getYear(item.First_Date_Nickname_Used)}-${getYear(item.Last_Date_Nickname_Used)})`}\r\n                </option>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"year\">Year</InputLabel>\r\n            <Select\r\n              id=\"year\"\r\n              label=\"Year\"\r\n              autoWidth\r\n              native\r\n              onChange={handleYearChange}\r\n              value={selectedYear}\r\n            >\r\n              <option value=\"\" />\r\n              {yearsArray.sort((a: number, b: number) => b - a).map((year: number) =>\r\n                <option key={year} value={year}>{year}</option>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => handleClick('franchise')}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item style={{flexGrow: 1}}>\r\n          <Divider orientation=\"vertical\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            id=\"date\"\r\n            variant=\"outlined\"\r\n            type=\"date\"\r\n            onChange={handleDateChange}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => handleClick('date')}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs><Divider /></Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          {showDateSearch ?\r\n            <ScheduleProvider\r\n              selectedDate={selectedDate}\r\n              selectedFranchise={''}\r\n              selectedYear={''}\r\n            >\r\n              <Schedule />\r\n            </ScheduleProvider> : showFranchiseSearch ?\r\n            <ScheduleProvider\r\n              selectedFranchise={selectedFranchiseId}\r\n              selectedYear={selectedYear}\r\n              selectedDate={''}\r\n            >\r\n              <Schedule />\r\n            </ScheduleProvider> : null}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Schedules)\r\n","import { createContext, useContext } from \"react\"\r\nimport { IBoxscoreStore } from '../stores/IBoxscore'\r\n\r\nexport const BoxscoreContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IBoxscoreStore): any\r\n}\r\n\r\nexport function useBoxscoreStore(mapState?: IMapState): any {\r\n  const store = useContext(BoxscoreContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import React from 'react'\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { IBoxscore } from '../stores/IBoxscore'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\ninterface IScore {\r\n  boxscore: IBoxscore\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 100,\r\n    margin: '2px'\r\n  },\r\n})\r\n\r\nconst Score: React.FC<IScore> = (props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\" className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell>R</TableCell>\r\n            <TableCell>H</TableCell>\r\n            <TableCell>E</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{props.boxscore.visiting_team}</TableCell>\r\n            <TableCell>{props.boxscore.visitor_final_score}</TableCell>\r\n            <TableCell>{props.boxscore.visitor_hits}</TableCell>\r\n            <TableCell>{props.boxscore.visitor_errors}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{props.boxscore.home_team}</TableCell>\r\n            <TableCell>{props.boxscore.home_final_score}</TableCell>\r\n            <TableCell>{props.boxscore.home_hits}</TableCell>\r\n            <TableCell>{props.boxscore.home_errors}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default observer(Score)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\n\r\ninterface IWind {\r\n  windDirection: string | undefined,\r\n  windSpeed: string | undefined\r\n}\r\n\r\nconst Wind: React.FC<IWind> = (props) => {\r\n  const { windDirection, windSpeed } = props\r\n\r\n  const getWindDirection = (code: string | undefined) => {\r\n    switch (code) {\r\n      case \"0\":\r\n      default:\r\n        return \"unknown\"\r\n      case \"1\":\r\n        return \"to left\"\r\n      case \"2\":\r\n        return \"to center\"\r\n      case \"3\":\r\n        return \"to right\"\r\n      case \"4\":\r\n        return \"left to right\"\r\n      case \"5\":\r\n        return \"from left\"\r\n      case \"6\":\r\n        return \"from center\"\r\n      case \"7\":\r\n        return \"from right\"\r\n      case \"8\":\r\n        return \"right to left\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <p>{`Wind ${getWindDirection(windDirection)} at ${windSpeed} mph`}</p>\r\n  )\r\n}\r\n\r\nexport default observer(Wind)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { IBoxscore } from '../stores/IBoxscore'\r\nimport Wind from './Wind'\r\n\r\ninterface IWeatherConditions {\r\n  boxscore: IBoxscore\r\n}\r\n\r\nconst WeatherConditions: React.FC<IWeatherConditions> = (props) => {\r\n  const { boxscore } = props\r\n\r\n  const getSky = (code: string | undefined) => {\r\n    switch (code) {\r\n      case \"0\":\r\n        return \"Sky condition unknown\"\r\n      case \"1\":\r\n        return \"Sky is sunny\"\r\n      case \"2\":\r\n        return \"Sky is cloudy\"\r\n      case \"3\":\r\n        return \"Sky is overcast\"\r\n      case \"4\":\r\n        return \"Night\"\r\n      case \"5\":\r\n        return \"Dome\"\r\n    }\r\n  }\r\n\r\n  const getPrecipitation = (code: string | undefined) => {\r\n    switch (code) {\r\n      case \"0\":\r\n        return \"unknown\"\r\n      case \"1\":\r\n        return \"none\"\r\n      case \"2\":\r\n        return \"drizzle\"\r\n      case \"3\":\r\n        return \"showers\"\r\n      case \"4\":\r\n        return \"rain\"\r\n      case \"5\":\r\n        return \"snow\"\r\n    }\r\n  }\r\n\r\n  const getFieldCondition = (code: string | undefined) => {\r\n    switch (code) {\r\n      case \"0\":\r\n        return \"unknown\"\r\n      case \"1\":\r\n        return \"soaked\"\r\n      case \"2\":\r\n        return \"wet\"\r\n      case \"3\":\r\n        return \"damp\"\r\n      case \"4\":\r\n        return \"dry\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>{`${getSky(boxscore.sky)} and temperature is ${boxscore.temperature}\\u00B0`}</p>\r\n      <Wind\r\n        windDirection={props.boxscore.wind_direction}\r\n        windSpeed={props.boxscore.wind_speed}\r\n      />\r\n      <p>{`Precipitation: ${getPrecipitation(boxscore.precipitation)}`}</p>\r\n      <p>{`Field condition: ${getFieldCondition(boxscore.field_condition)}`}</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(WeatherConditions)\r\n","import { IPerson } from \"../stores/IPerson\"\r\n\r\nexport const getPersonString = (playerId: string | undefined, people: Array<IPerson>) => {\r\n  const player = people.find((item: IPerson) => item.ID === playerId)\r\n  return player ? `${player.First} ${player.Last}` : null\r\n}\r\n","import React from 'react'\r\nimport { IBoxscore } from '../stores/IBoxscore'\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport { getPersonString } from '../utils/getPersonString'\r\nimport { IPerson } from '../stores/IPerson'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\ninterface IUmpires {\r\n  boxscore: IBoxscore,\r\n  people: Array<IPerson>\r\n}\r\n\r\nconst Umpires: React.FC<IUmpires> = (props) => {\r\n  const { boxscore, people } = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><em>Umpires</em></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_plate_umpire, people)}, home`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.first_base_umpire, people)}, 1B`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.second_base_umpire, people)}, 2B`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.third_base_umpire, people)}, 3B`}</TableCell>\r\n          </TableRow>\r\n          {boxscore.left_field_umpire &&\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.left_field_umpire, people)}, LF`}</TableCell>\r\n          </TableRow>}\r\n          {boxscore.right_field_umpire &&\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.right_field_umpire, people)}, RF`}</TableCell>\r\n          </TableRow>}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default observer(Umpires)\r\n","export const getPositionString = (position: string | undefined) => {\r\n  switch (position) {\r\n    case \"1\":\r\n      return \"P\"\r\n    case \"2\":\r\n      return \"C\"\r\n    case \"3\":\r\n      return \"1B\"\r\n    case \"4\":\r\n      return \"2B\"\r\n    case \"5\":\r\n      return \"3B\"\r\n    case \"6\":\r\n      return \"SS\"\r\n    case \"7\":\r\n      return \"LF\"\r\n    case \"8\":\r\n      return \"CF\"\r\n    case \"9\":\r\n      return \"RF\"\r\n    case \"10\":\r\n      return \"DH\"\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { IBoxscore } from '../stores/IBoxscore'\r\nimport { IPerson } from '../stores/IPerson'\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport { getPositionString } from '../utils/getPositionString'\r\nimport { getPersonString } from '../utils/getPersonString'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\ninterface ILineup {\r\n  boxscore: IBoxscore,\r\n  people: Array<IPerson>\r\n}\r\n\r\nconst Lineup: React.FC<ILineup> = (props) => {\r\n  const { boxscore, people } = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{boxscore.home_team}</TableCell>\r\n            <TableCell>{boxscore.visiting_team}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_1, people)}, ${getPositionString(boxscore.home_position_1)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_1, people)}, ${getPositionString(boxscore.visitor_position_1)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_2, people)}, ${getPositionString(boxscore.home_position_2)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_2, people)}, ${getPositionString(boxscore.visitor_position_2)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_3, people)}, ${getPositionString(boxscore.home_position_3)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_3, people)}, ${getPositionString(boxscore.visitor_position_3)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_4, people)}, ${getPositionString(boxscore.home_position_4)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_4, people)}, ${getPositionString(boxscore.visitor_position_4)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_5, people)}, ${getPositionString(boxscore.home_position_5)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_5, people)}, ${getPositionString(boxscore.visitor_position_5)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_6, people)}, ${getPositionString(boxscore.home_position_6)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_6, people)}, ${getPositionString(boxscore.visitor_position_6)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_7, people)}, ${getPositionString(boxscore.home_position_7)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_7, people)}, ${getPositionString(boxscore.visitor_position_7)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_8, people)}, ${getPositionString(boxscore.home_position_8)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_8, people)}, ${getPositionString(boxscore.visitor_position_8)}`}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>{`${getPersonString(boxscore.home_batter_9, people)}, ${getPositionString(boxscore.home_position_9)}`}</TableCell>\r\n            <TableCell>{`${getPersonString(boxscore.visitor_batter_9, people)}, ${getPositionString(boxscore.visitor_position_9)}`}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default observer(Lineup)\r\n","import { createContext, useContext } from \"react\"\r\nimport { IPersonStore } from '../stores/IPerson'\r\n\r\nexport const PersonContext = createContext<any>(null)\r\n\r\ninterface IMapState {\r\n  (store: IPersonStore): any\r\n}\r\n\r\nexport function usePersonStore(mapState?: IMapState): any {\r\n  const store = useContext(PersonContext)\r\n\r\n  if (mapState) {\r\n    return mapState(store)\r\n  }\r\n\r\n  return store\r\n}\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useBoxscoreStore } from '../contexts/BoxscoreContext'\r\nimport GenericBreadcrumbs from './GenericBreadcrumbs'\r\nimport Score from './Score'\r\nimport WeatherConditions from './WeatherConditions'\r\nimport Umpires from './Umpires'\r\nimport Lineup from './Lineup'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useBallparkStore } from '../contexts/BallparkContext'\r\nimport { IBallpark } from '../stores/IBallpark'\r\nimport { usePersonStore } from '../contexts/PersonContext'\r\n\r\nconst Boxscores: React.FC = () => {\r\n  const boxscoreStore = useBoxscoreStore()\r\n  const ballparkStore = useBallparkStore()\r\n  const personStore = usePersonStore()\r\n  const { boxscore } = boxscoreStore\r\n  const { ballparks } = ballparkStore\r\n  const { people } = personStore\r\n\r\n  const [currentBallpark, setCurrentBallpark] = useState<IBallpark>()\r\n\r\n  const getTimeOfGame = (minutes: string) => {\r\n    const minutesNumber = parseInt(minutes)\r\n    const remainder = minutesNumber % 60\r\n    return `${Math.floor(minutesNumber / 60)}:${remainder < 10 ? '0' : ''}${remainder}`\r\n  }\r\n\r\n  const getDateString = (inputString: string) => {\r\n    const options: any = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\r\n    const year = inputString.substring(0, inputString.length === 8 ? 4 : 2)\r\n    const month = inputString.length === 8 ? inputString.substring(4, 6) : inputString.substring(2, 4)\r\n    const day = inputString.slice(-2)\r\n    const date = new Date(`${month} ${day}, ${year}`)\r\n    return date.toLocaleDateString('en-US', options)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ballpark = ballparks.find((item: IBallpark) => item.PARKID === boxscore.game_site)\r\n    setCurrentBallpark(ballpark)\r\n  }, [ballparks])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GenericBreadcrumbs breadcrumb=\"Boxscore\" />\r\n      {boxscore &&\r\n      <Grid container justify=\"space-evenly\">\r\n        <Grid item>\r\n          <Typography>{getDateString(boxscore?.date)}</Typography>\r\n          {currentBallpark &&\r\n          <Typography>{`${currentBallpark?.NAME}, ${currentBallpark?.CITY}, ${currentBallpark?.STATE}`}</Typography>}\r\n          <Score boxscore={boxscore} />\r\n          <Umpires boxscore={boxscore} people={people} />\r\n          <p>{`Attendance \\u2013 ${boxscore.attendance}`}</p>\r\n          <p>{`Time of game \\u2013 ${getTimeOfGame(boxscore.time_of_game)}`}</p>\r\n          <WeatherConditions boxscore={boxscore} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Lineup boxscore={boxscore} people={people} />\r\n        </Grid>\r\n      </Grid>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default observer(Boxscores)\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\n\r\nconst Ballpark = types.model('Ballpark', {\r\n  PARKID: types.string,\r\n  NAME: types.string,\r\n  AKA: types.string,\r\n  CITY: types.string,\r\n  STATE: types.string,\r\n  START: types.string,\r\n  END: types.string,\r\n  LEAGUE: types.string,\r\n  NOTES: types.string\r\n})\r\n\r\nexport const BallparkStore = types.model('BallparkStore', {\r\n  ballparks: types.optional(types.maybeNull(types.array(Ballpark)), null)\r\n}).actions(self => {\r\n  const load = flow(function* loadData() {\r\n    const response = yield fetch('https://www.mikebents.com/rs-data/ballparks/')\r\n    const json = yield response.json()\r\n    applySnapshot(self, {ballparks: [...json]})\r\n  })\r\n  \r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { BallparkStore } from '../models/Ballpark'\r\nimport { BallparkContext } from '../contexts/BallparkContext'\r\n\r\nconst BallparkProvider = ({ children }: any) => {\r\n  const [ballparkStore] = useState(BallparkStore.create({ballparks: []}))\r\n\r\n  const { Provider } = BallparkContext\r\n  return (\r\n    <Provider value={ballparkStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default BallparkProvider\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\n\r\nconst Franchise = types.model('Franchise', {\r\n  Current_Franchise_ID: types.string,\r\n  Franchise_ID: types.string,\r\n  League: types.string,\r\n  Division: types.string,\r\n  Location_Name: types.string,\r\n  Nickname: types.string,\r\n  Alternate_Nicknames: types.string,\r\n  First_Date_Nickname_Used: types.string,\r\n  Last_Date_Nickname_Used: types.string,\r\n  City: types.string,\r\n  State: types.string\r\n})\r\n\r\nexport const FranchiseStore = types.model('FranchiseStore', {\r\n  franchises: types.optional(types.maybeNull(types.array(Franchise)), null)\r\n}).actions(self => {\r\n  const load = flow(function* loadData() {\r\n    const response = yield fetch('https://www.mikebents.com/rs-data/franchises/')\r\n    const json = yield response.json()\r\n    applySnapshot(self, {franchises: [...json]})\r\n  })\r\n  \r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FranchiseStore } from '../models/Franchise'\r\nimport { FranchiseContext } from '../contexts/FranchiseContext'\r\n\r\nconst FranchiseProvider = ({ children }: any) => {\r\n  const [franchiseStore] = useState(FranchiseStore.create({franchises: []}))\r\n\r\n  const { Provider } = FranchiseContext\r\n  return (\r\n    <Provider value={franchiseStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default FranchiseProvider\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\nimport { IBoxscore } from \"../stores/IBoxscore\"\r\n\r\nconst Boxscore = types.model('Boxscore', {\r\n  game_id: types.string,\r\n  date: types.string,\r\n  game_number: types.string,\r\n  day_of_week: types.string,\r\n  start_time: types.string,\r\n  DH_used_flag: types.string,\r\n  day_night_flag: types.string,\r\n  visiting_team: types.string,\r\n  home_team: types.string,\r\n  game_site: types.string,\r\n  vis_starting_pitcher: types.string,\r\n  home_starting_pitcher: types.string,\r\n  home_plate_umpire: types.string,\r\n  first_base_umpire: types.string,\r\n  second_base_umpire: types.string,\r\n  third_base_umpire: types.string,\r\n  left_field_umpire: types.string,\r\n  right_field_umpire: types.string,\r\n  attendance: types.string,\r\n  PS_scorer: types.string,\r\n  translator: types.string,\r\n  inputter: types.string,\r\n  input_time: types.string,\r\n  edit_time: types.string,\r\n  how_scored: types.string,\r\n  pitches_entered: types.string,\r\n  temperature: types.string,\r\n  wind_direction: types.string,\r\n  wind_speed: types.string,\r\n  field_condition: types.string,\r\n  precipitation: types.string,\r\n  sky: types.string,\r\n  time_of_game: types.string,\r\n  number_of_innings: types.string,\r\n  visitor_final_score: types.string,\r\n  home_final_score: types.string,\r\n  visitor_hits: types.string,\r\n  home_hits: types.string,\r\n  visitor_errors: types.string,\r\n  home_errors: types.string,\r\n  visitor_left_on_base: types.string,\r\n  home_left_on_base: types.string,\r\n  winning_pitcher: types.string,\r\n  losing_pitcher: types.string,\r\n  save_for: types.string,\r\n  GW_RBI: types.string,\r\n  visitor_batter_1: types.string,\r\n  visitor_position_1: types.string,\r\n  visitor_batter_2: types.string,\r\n  visitor_position_2: types.string,\r\n  visitor_batter_3: types.string,\r\n  visitor_position_3: types.string,\r\n  visitor_batter_4: types.string,\r\n  visitor_position_4: types.string,\r\n  visitor_batter_5: types.string,\r\n  visitor_position_5: types.string,\r\n  visitor_batter_6: types.string,\r\n  visitor_position_6: types.string,\r\n  visitor_batter_7: types.string,\r\n  visitor_position_7: types.string,\r\n  visitor_batter_8: types.string,\r\n  visitor_position_8: types.string,\r\n  visitor_batter_9: types.string,\r\n  visitor_position_9: types.string,\r\n  home_batter_1: types.string,\r\n  home_position_1: types.string,\r\n  home_batter_2: types.string,\r\n  home_position_2: types.string,\r\n  home_batter_3: types.string,\r\n  home_position_3: types.string,\r\n  home_batter_4: types.string,\r\n  home_position_4: types.string,\r\n  home_batter_5: types.string,\r\n  home_position_5: types.string,\r\n  home_batter_6: types.string,\r\n  home_position_6: types.string,\r\n  home_batter_7: types.string,\r\n  home_position_7: types.string,\r\n  home_batter_8: types.string,\r\n  home_position_8: types.string,\r\n  home_batter_9: types.string,\r\n  home_position_9: types.string\r\n})\r\n\r\nexport const BoxscoreStore = types.model('BoxscoreStore', {\r\n  gameId: types.optional(types.maybeNull(types.string), null),\r\n  boxscore: types.optional(types.maybeNull(Boxscore), null)\r\n}).actions(self => {\r\n  const load = flow(function* () {\r\n    if (self.gameId) {\r\n      const team = self.gameId.substring(0, 3)\r\n      const year = self.gameId.substring(3, 7)\r\n      const response = yield fetch(`https://www.mikebents.com/rs-data/games/${year}${team}.json`)\r\n      const json = yield response.json()\r\n      const boxscore = json.find((item: IBoxscore) => item.game_id === self.gameId)\r\n      applySnapshot(self, {boxscore: boxscore})\r\n    }\r\n  })\r\n\r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})","import { useParams } from 'react-router-dom'\r\nimport { BoxscoreStore } from '../models/Boxscore'\r\nimport { BoxscoreContext } from '../contexts/BoxscoreContext'\r\n\r\nconst BoxscoreProvider = ({ children }: any) => {\r\n  const { gameId } = useParams<{ gameId: string }>()\r\n  const boxscoreStore = BoxscoreStore.create({\r\n    boxscore: null,\r\n    gameId: gameId\r\n  })\r\n\r\n  const { Provider } = BoxscoreContext\r\n  return (\r\n    <Provider value={boxscoreStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default BoxscoreProvider\r\n","import { applySnapshot, flow, types } from \"mobx-state-tree\"\r\n\r\nconst Person = types.model('Person', {\r\n  ID: types.string,\r\n  Last: types.string,\r\n  First: types.string,\r\n  Playdebut: types.string,\r\n  Mgrdebut: types.string,\r\n  Coachdebut: types.string,\r\n  Umpdebut: types.string\r\n})\r\n\r\nexport const PersonStore = types.model('PersonStore', {\r\n  people: types.optional(types.maybeNull(types.array(Person)), null)\r\n}).actions(self => {\r\n  const load = flow(function* () {\r\n    const response = yield fetch('https://www.mikebents.com/rs-data/people/')\r\n    const json = yield response.json()\r\n    applySnapshot(self, {people: [...json]})\r\n  })\r\n\r\n  return {\r\n    load,\r\n    afterCreate() {\r\n      load()\r\n    }\r\n  }\r\n})","import React, { useState } from 'react'\r\nimport { PersonStore } from '../models/Person'\r\nimport { PersonContext } from '../contexts/PersonContext'\r\n\r\nconst PersonProvider = ({ children }: any) => {\r\n  const [personStore] = useState(PersonStore.create({people: []}))\r\n\r\n  const { Provider } = PersonContext\r\n  return (\r\n    <Provider value={personStore}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default PersonProvider\r\n","import { Container } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport Ballparks from './Ballparks'\r\nimport Franchises from './Franchises'\r\nimport Franchise from './Franchise'\r\nimport About from './About'\r\nimport Schedule from './Schedule'\r\nimport Schedules from './Schedules'\r\nimport Boxscores from './Boxscores'\r\nimport BallparkProvider from '../providers/BallparkProvider'\r\nimport FranchiseProvider from '../providers/FranchiseProvider'\r\nimport ScheduleProvider from '../providers/ScheduleProvider'\r\nimport BoxscoreProvider from '../providers/BoxscoreProvider'\r\nimport PersonProvider from '../providers/PersonProvider'\r\n\r\nconst RouteContainer: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Switch>\r\n        <Route path=\"/boxscores/:gameId\">\r\n          <BoxscoreProvider>\r\n            <BallparkProvider>\r\n              <PersonProvider>\r\n                <Boxscores />\r\n              </PersonProvider>\r\n            </BallparkProvider>\r\n          </BoxscoreProvider>\r\n        </Route>\r\n        <Route path=\"/schedules\">\r\n          <FranchiseProvider>\r\n            <Schedules />\r\n          </FranchiseProvider>\r\n        </Route>\r\n        <Route exact path=\"/franchises\">\r\n          <FranchiseProvider>\r\n            <Franchises />\r\n          </FranchiseProvider>\r\n        </Route>\r\n        <Route exact path=\"/franchises/:franchiseId\">\r\n          <FranchiseProvider>\r\n            <Franchise />\r\n          </FranchiseProvider>\r\n        </Route>\r\n        <Route path=\"/franchises/:franchiseId/schedule/:year\">\r\n          <ScheduleProvider>\r\n            <Schedule showBreadcrumbs={true} />\r\n          </ScheduleProvider>\r\n        </Route>\r\n        <Route path=\"/ballparks\">\r\n          <BallparkProvider>\r\n            <Ballparks />\r\n          </BallparkProvider>\r\n        </Route>\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default observer(RouteContainer)\r\n","import { CssBaseline, Divider, Drawer, IconButton, makeStyles, useTheme } from '@material-ui/core'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport './App.css'\r\nimport clsx from 'clsx'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport TopAppBar from './components/TopAppBar'\r\nimport NavMenuList from './components/NavMenuList'\r\nimport RouteContainer from './components/RouteContainer'\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <HashRouter basename=\"/\">\r\n        <CssBaseline />\r\n        <TopAppBar open={open} setOpen={setOpen} />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <NavMenuList />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <RouteContainer />\r\n        </main>\r\n      </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}